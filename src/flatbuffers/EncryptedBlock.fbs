// This file is part of the interface between Spark SQL and the SGX enclave --
// the "trusted-untrusted interface," or TUIX.

namespace edu.berkeley.cs.rise.opaque.tuix;

table EncryptedBlock {
    num_rows:uint;
    // When decrypted, this should contain a Rows object at its root
    enc_rows:[ubyte];
}

table EncryptedBlocks {
    blocks:[EncryptedBlock];
    log:LogEntryChain;
    log_mac:[Mac]; 
    all_outputs_mac:[Mac];
}

table SortedRuns {
    runs:[EncryptedBlocks];
}

table LogEntry {
    ecall:int; // ecall executed
    num_macs:int; // Number of EncryptedBlock's in this EncryptedBlocks - checked during runtime
    mac_lst:[ubyte]; // List of all MACs. one from each EncryptedBlocks - checked during runtime
    mac_lst_mac:[ubyte]; // MAC(mac_lst) - checked during runtime
    input_macs:[ubyte]; // List of input EncryptedBlocks' all_output_mac's
    num_input_macs:int; // Number of input_macs
}

table LogEntryChain {
    curr_entries:[LogEntry];
    past_entries:[Crumb];
    num_past_entries:[int];
}

table Mac {
    mac:[ubyte];
}

// Contains information about an ecall, which will be pieced together during post verfication to verify the DAG
// A crumb is created at an ecall for each previous ecall that sent some data to this ecall
table Crumb {
    input_macs:[ubyte]; // List of EncryptedBlocks all_output_mac's, from LogEntry
    num_input_macs:int; // Number of input_macs
    all_outputs_mac:[ubyte]; // MAC over all outputs of ecall from which this EncryptedBlocks came from, of size OE_HMAC_SIZE
    ecall:int; // Ecall executed
    log_mac:[ubyte]; // MAC over the LogEntryChain from this EncryptedBlocks, of size OE_HMAC_SIZE
}



